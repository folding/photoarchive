@{
    ViewData["Title"] = "Home Page";
}
@model PhotoArchive.Domain.ImageMetaData;
<style>
    body {
        background-color: slategray;
    }

    #leftSlider .slider-selection {
        background: #BABA00;
    }

    #rightSlider .slider-selection {
        background: #BABA00;
    }

    #topSlider .slider-selection {
        background: #BABA00;
    }

    #bottomSlider .slider-selection {
        background: #BABA00;
    }


    .slider-handle.custom {
        background: transparent none;
        /* You can customize the handle and set a background image */
    }

        /* Or display content like unicode characters or fontawesome icons */
        .slider-handle.custom::before {
            line-height: 40px;
            font-size: 40px;
            content: '\26AB'; /*unicode circle character*/
            color: #726204;
        }
</style>
<form id="imgform">
    <div class="row">
        <div class="col-lg-7 col-sm-12">
            <div class="row">
                <div class="col-12">
                    <input id="rotVal" value="@Model.Rotate" style="display:none;" />
                    <span class="btn" onclick="setRotation(0)" title="0">0</span>
                    <span class="btn" onclick="setRotation(90)" title="90">90</span>
                    <span class="btn" onclick="setRotation(180)" title="180">180</span>
                    <span class="btn" onclick="setRotation(270)" title="270">270</span>
                    <button type="submit">Save</button>
                    <a href="/home/image/@Model.Image" id="fullsizelink" target="_blank">full size</a>
                    <a href="/home/image/@Model.Image" id="originallink" target="_blank">original</a>
                    <a href="@Url.Content("~/home/index/")@Model.Image" id="link" target="_blank">link</a>
                </div>
                <div class="col-12">
                    <label class="col-form-label" for="rotationSlider">Angle Correction</label>
                    <input id="rot2Val" value="@Model.Rotate2" style="display:none;" />
                    <input id="rotationSlider" data-slider-id='rotationSlider' type="text" />
                </div>
                <div class="col-12">
                    <label class="col-form-label" for="rightSlider">Crop Right</label>
                    <input id="rightVal" value="@Model.RightCrop" style="display:none;" />
                    <input id="rightSlider" data-slider-id='rightSlider' type="text" />
                </div>
                <div class="col-12">
                    <div class="row">
                        <div class="col-2">
                            <input id="topSlider" data-slider-id='topSlider' type="text" />
                            <label class="col-form-label" for="topSlider">Crop Top</label>
                            <input id="topVal" value="@Model.TopCrop" style="display:none;" />

                        </div>
                        <div class="col-8">
                            <img id="theimage" src="home/image/@Model.Image" />
                            <input id="Image" type="text" value="@Model.Image" style="display:none;" />
                        </div>
                        <div class="col-2">
                            <label class="col-form-label" for="bottomSlider">Crop Bottom</label>
                            <input id="bottomVal" value="@Model.BottomCrop" style="display:none;" />
                            <input id="bottomSlider" data-slider-id='bottomSlider' type="text" />
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <label class="col-form-label" for="leftSlider">Crop Left</label>
                    <input id="leftVal" value="@Model.LeftCrop" style="display:none;" />
                    <input id="leftSlider" data-slider-id='leftSlider' type="text" />
                </div>
            </div>
        </div>
        <div class="col-lg-5 col-sm-12">
            <img id="thethumb" src="/home/image/@Model.Image" />
            <div id="coords"></div>
            <ul>
                <li>@Model.Path</li>
                <li>FileCreationDateTime:@Model.FileDateTime;</li>
                <li>ExifDateTime:@Model.ExifDateTime;</li>
                <li>Width:@Model.Width;</li>
                <li>Height:@Model.Height;</li>
                <li>ISOSpeedRatings:@Model.ISOSpeedRatings;</li>
                <li>PixelXDimension:@Model.PixelXDimension;</li>
                <li>PixelYDimension:@Model.PixelYDimension;</li>
                <li>GPSAltitude:@Model.GPSAltitude;</li>
                <li>GPSLatitude:@Model.GPSLatitude;</li>
                <li>GPSLongitude:@Model.GPSLongitude;</li>
            </ul>
        </div>
    </div>

</form>
@section scripts {

    <script>
        var imgData = {};
        var leftSlider = {};
        var rightSlider = {};
        var topSlider = {};
        var bottomSlider = {};


    function changeImage() {
        var img = document.getElementById("theimage");
        var fullsize = document.getElementById("fullsizelink")
        var original = document.getElementById("originallink")
        var rot = document.getElementById("rotVal").value;
        var rot2 = document.getElementById("rot2Val").value;
        var leftcrop = document.getElementById("leftVal").value;
        var rightcrop = document.getElementById("rightVal").value;
        var topcrop = document.getElementById("topVal").value;
        var bottomcrop = document.getElementById("bottomVal").value;
        var screensize = "";
        if ($(window).width() < 1280) {
            screensize = "mobile";
        }

        var imgQuery = "?crop=" + leftcrop + "," + topcrop + "," + rightcrop + "," + bottomcrop + "&rot=" + rot + "&rot2=" + rot2;

        img.src = window.location.origin + "/home/image" + screensize + "/@Model.Image" + imgQuery;
        fullsize.href = window.location.origin + "/home/imagefull/@Model.Image" + imgQuery;
        original.href = window.location.origin + "/home/imagefull/@Model.Image";
    }
    function setRotation(rot) {


        if (rot < 0) {
            rot += 360;
        }
        else if (rot > 270) {
            rot %= 360;
        }

        if (rot == 360) {
            rot = 0;
        }

        var currentrot = $("#rotVal").val();

        if (currentrot == rot) {
            return;
        }

        $("#rotVal").val(rot);

        switch (rot) {
            case 0:
                //right(on the top)
                rightSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                rightSlider.bootstrapSlider("refresh");
                rightSlider.bootstrapSlider("setValue", $("#rightVal").val());
                rightSlider.off("slide");
                rightSlider.on("slide", function (slideEvt) {
                    $("#rightVal").val(slideEvt.value);
                    changeImage();
                });
                //bottom(on the right)
                bottomSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                bottomSlider.bootstrapSlider("refresh");
                bottomSlider.bootstrapSlider("setValue", $("#bottomVal").val());
                bottomSlider.off("slide");
                bottomSlider.on("slide", function (slideEvt) {
                    $("#bottomVal").val(slideEvt.value);
                    changeImage();
                });
                //left(on the bottom)
                leftSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                leftSlider.bootstrapSlider("refresh");
                leftSlider.bootstrapSlider("setValue", $("#leftVal").val());
                leftSlider.off("slide");
                leftSlider.on("slide", function (slideEvt) {
                    $("#leftVal").val(slideEvt.value);
                    changeImage();
                });
                //top(on the left)
                topSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                topSlider.bootstrapSlider("refresh");
                topSlider.bootstrapSlider("setValue", $("#topVal").val());
                topSlider.off("slide");
                topSlider.on("slide", function (slideEvt) {
                    $("#topVal").val(slideEvt.value);
                    changeImage();
                });
                break;
            case 90:
                //right(on the top) - now controls top
                var tc = @Model.Height-$("#topVal").val();
                rightSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                rightSlider.bootstrapSlider("refresh");
                rightSlider.bootstrapSlider("setValue", tc);
                rightSlider.off("slide");
                rightSlider.on("slide", function (slideEvt) {
                    $("#topVal").val(@Model.Height-slideEvt.value);
                    changeImage();
                });
                //bottom(on the right) - now controls right
                var rc = $("#rightVal").val();
                bottomSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                bottomSlider.bootstrapSlider("refresh");
                bottomSlider.bootstrapSlider("setValue", rc);
                bottomSlider.off("slide");
                bottomSlider.on("slide", function (slideEvt) {
                    $("#rightVal").val(slideEvt.value);
                    changeImage();
                });
                //left(on the bottom) - now controls bottom
                var bc = @Model.Height-$("#bottomVal").val();
                leftSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                leftSlider.bootstrapSlider("refresh");
                leftSlider.bootstrapSlider("setValue", bc);
                leftSlider.off("slide");
                leftSlider.on("slide", function (slideEvt) {
                    $("#bottomVal").val(@Model.Height-slideEvt.value);
                    changeImage();
                });
                //top(on the left) - now controls left
                topSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                topSlider.bootstrapSlider("refresh");
                topSlider.bootstrapSlider("setValue", $("#leftVal").val());
                topSlider.off("slide");
                topSlider.on("slide", function (slideEvt) {
                    $("#leftVal").val(slideEvt.value);
                    changeImage();
                });
                break;
            case 180:
                //right(on the top) - now controls left
                rightSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                rightSlider.bootstrapSlider("refresh");
                rightSlider.bootstrapSlider("setValue", @Model.Width-$("#leftVal").val());
                rightSlider.off("slide");
                rightSlider.on("slide", function (slideEvt) {
                    $("#leftVal").val(@Model.Width-slideEvt.value);
                    changeImage();
                });
                //bottom(on the right) - now controls top
                bottomSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                bottomSlider.bootstrapSlider("refresh");
                bottomSlider.bootstrapSlider("setValue", @Model.Height-$("#topVal").val());
                bottomSlider.off("slide");
                bottomSlider.on("slide", function (slideEvt) {
                    $("#topVal").val(@Model.Height-slideEvt.value);
                    changeImage();
                });
                //left(on the bottom) - now controls right
                leftSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                leftSlider.bootstrapSlider("refresh");
                leftSlider.bootstrapSlider("setValue", @Model.Width-$("#rightVal").val());
                leftSlider.off("slide");
                leftSlider.on("slide", function (slideEvt) {
                    $("#rightVal").val(@Model.Width-slideEvt.value);
                    changeImage();
                });
                //top(on the left) - now controls bottom
                topSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                topSlider.bootstrapSlider("refresh");
                topSlider.bootstrapSlider("setValue", @Model.Height-$("#bottomVal").val());
                topSlider.off("slide");
                topSlider.on("slide", function (slideEvt) {
                    $("#bottomVal").val(@Model.Height-slideEvt.value);
                    changeImage();
                });
                break;
            case 270:
                //right(on the top) - now controls bottom
                rightSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                rightSlider.bootstrapSlider("refresh");
                rightSlider.bootstrapSlider("setValue", $("#bottomVal").val());
                rightSlider.off("slide");
                rightSlider.on("slide", function (slideEvt) {
                    $("#bottomVal").val(slideEvt.value);
                    changeImage();
                });
                //bottom(on the right) - now controls left
                bottomSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                bottomSlider.bootstrapSlider("refresh");
                bottomSlider.bootstrapSlider("setValue", @Model.Width-$("#leftVal").val());
                bottomSlider.off("slide");
                bottomSlider.on("slide", function (slideEvt) {
                    $("#leftVal").val(@Model.Width-slideEvt.value);
                    changeImage();
                });
                //left(on the bottom) - now controls top
                leftSlider.bootstrapSlider("setAttribute", "max", @Model.Height);
                leftSlider.bootstrapSlider("refresh");
                leftSlider.bootstrapSlider("setValue", $("#topVal").val());
                leftSlider.off("slide");
                leftSlider.on("slide", function (slideEvt) {
                    $("#topVal").val(slideEvt.value);
                    changeImage();
                });
                //top(on the left) - now control right
                topSlider.bootstrapSlider("setAttribute", "max", @Model.Width);
                topSlider.bootstrapSlider("refresh");
                topSlider.bootstrapSlider("setValue", @Model.Width-$("#rightVal").val());
                topSlider.off("slide");
                topSlider.on("slide", function (slideEvt) {
                    $("#rightVal").val(@Model.Width-slideEvt.value);
                    changeImage();
                });
                break;

        }

        changeImage();
    }

    $(document).ready(function () {

        rotationSlider = $('#rotationSlider').bootstrapSlider({
            min: -10,
            max: 10,
            value: @Model.Rotate2,
            step: 0.1,
            handle: "custom",
            formatter: function (value) {
                return value + "°";
            }
        });
        rotationSlider.on("slide", function (slideEvt) {
            $("#rot2Val").val(slideEvt.value);
            changeImage();
        });
        leftSlider = $('#leftSlider').bootstrapSlider({
            min: 0,
            max: @Model.Width,
            value: @Model.LeftCrop,
            step: 1,
            handle: "custom",
            formatter: function (value) {
                return value + "px";
            }
        });
        leftSlider.on("slide", function (slideEvt) {
            $("#leftVal").val(slideEvt.value);
            changeImage();
        });
        rightSlider = $('#rightSlider').bootstrapSlider({
            min: 0,
            max: @Model.Width,
            value: @Model.RightCrop,
            step: 1,
            handle: "custom",
            formatter: function (value) {
                return value + "px";
            },
        });
        rightSlider.on("slide", function (slideEvt) {
            $("#rightVal").val(slideEvt.value);
            changeImage();
        });
        topSlider = $('#topSlider').bootstrapSlider({
            min: 0,
            max: @Model.Height,
            value: @Model.TopCrop,
            step: 1,
            handle: "custom",
            orientation: 'vertical',
            formatter: function (value) {
                return value + "px";
            }
        });
        topSlider.on("slide", function (slideEvt) {
            $("#topVal").val(slideEvt.value);
            changeImage();
        });
        bottomSlider = $('#bottomSlider').bootstrapSlider({
            min: 0,
            max: @Model.Height,
            value: @Model.BottomCrop,
            step: 1,
            handle: "custom",
            orientation: 'vertical',
            tooltip_position: 'left',
            formatter: function (value) {
                return value + "px";
            }
        });
        bottomSlider.on("slide", function (slideEvt) {
            $("#bottomVal").val(slideEvt.value);
            changeImage();
        });

        //make sure to rotate the sliders to match initial rotation
        var rot = parseInt(document.getElementById("rotVal").value);
        setRotation(rot);

        //load the cropped/rotated image
        changeImage();
        var aDown = false;
        var sDown = false;
        var dDown = false;
        $("body").keydown(function (event) {

            switch (event.which) {
                case 65://a
                    aDown = true;
                    break;
                case 83://s
                    sDown = true;
                    break;
                case 68://d
                    dDown = true;
                    break;
            }
            //console.log(event.which);
        });

        $("body").keypress(function (event) {

            //console.log(event.which);
        });

        $("body").keyup(function (event) {

            console.log(event.which);

            var currentrot = parseInt(document.getElementById("rotVal").value);
            switch (event.which) {

                case 65://a
                    aDown = false;
                    break;
                case 83://s
                    sDown = false;
                    break;
                case 68://d
                    sDown = false;
                    break;
                case 74://j

                    if (aDown && sDown) {
                        //move left slider left
                        var left = leftSlider.bootstrapSlider("getValue");
                        leftSlider.bootstrapSlider("setValue", left - 1, true, true);
                        setZoomXY(0, $("#theimage").height() / 2, 200, 0)
                    }
                    else if (dDown && sDown) {
                        //move right slider left
                        var right = rightSlider.bootstrapSlider("getValue");
                        rightSlider.bootstrapSlider("setValue", right - 1, true, true);
                        setZoomXY($("#theimage").width(), $("#theimage").height() / 2, -200, 0)
                    }
                    else if (aDown) {
                        //move left slider left
                        var left = leftSlider.bootstrapSlider("getValue");
                        leftSlider.bootstrapSlider("setValue", left - 10, true, true);
                        setZoomXY(0, $("#theimage").height() / 2, 200, 0)
                    }
                    else if (dDown) {
                        //move right slider left
                        var right = rightSlider.bootstrapSlider("getValue");
                        rightSlider.bootstrapSlider("setValue", right - 10, true, true);
                        setZoomXY($("#theimage").width(), $("#theimage").height() / 2, -200, 0)
                    }
                    else {
                        currentrot -= 90;
                    }
                    break;
                case 75://k
                    currentrot = 180;
                    break;
                case 76://l

                    if (aDown && sDown) {
                        //move left slider right
                        var left = leftSlider.bootstrapSlider("getValue");
                        leftSlider.bootstrapSlider("setValue", left + 1, true, true);//https://stackoverflow.com/a/47411403
                        setZoomXY(0, $("#theimage").height() / 2, 200, 0)
                    }
                    else if (dDown && sDown) {
                        //move right slider right
                        var right = rightSlider.bootstrapSlider("getValue");
                        rightSlider.bootstrapSlider("setValue", right + 1, true, true);//https://stackoverflow.com/a/47411403
                        setZoomXY($("#theimage").width(), $("#theimage").height() / 2, -200, 0)
                    }
                    else if (dDown) {
                        //move right slider right
                        var right = rightSlider.bootstrapSlider("getValue");
                        rightSlider.bootstrapSlider("setValue", right + 10, true, true);//https://stackoverflow.com/a/47411403
                        setZoomXY($("#theimage").width(), $("#theimage").height() / 2, -200, 0)
                    }
                    else if (aDown) {
                        //move left slider right
                        var left = leftSlider.bootstrapSlider("getValue");
                        leftSlider.bootstrapSlider("setValue", left + 10, true, true);//https://stackoverflow.com/a/47411403
                        setZoomXY(0,$("#theimage").height()/2,200,0)
                    }
                    else {
                        currentrot += 90;
                    }
                    break;
            }


            setRotation(currentrot);
        });


        //hover for closeup
        $('#theimage').on("mousemove", function (e) {
            var offset = $(this).offset();
            //screen image x,y
            var CX = Math.floor((e.pageX - offset.left));
            var CY = Math.floor((e.pageY - offset.top));
            setZoomXY(CX, CY,0,0);

        });

        $("#target").mouseup(function () {
            alert("Handler for .mouseup() called.");
        });


        $("#imgform").submit(function (e) {
            // here's where you stop the default submit action of the form
            e.preventDefault();

            //collect all our image properties
            imgData.Image = $("#Image").val();
            imgData.Rotate = parseInt($("#rotVal").val());
            imgData.Rotate2 = $("#rot2Val").val();
            imgData.LeftCrop = parseInt($("#leftVal").val());
            imgData.TopCrop = parseInt($("#topVal").val());
            imgData.RightCrop = parseInt($("#rightVal").val());
            imgData.BottomCrop = parseInt($("#bottomVal").val());
            thedata = JSON.stringify(imgData);
            // Now execute your AJAX
            $.ajax({
                type: "POST",
                url: "/home/updateimage",
                data: thedata,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8'
            }).done(function (response) {
                // handle a successful response
                Toast.create("Success", "Saved!", TOAST_STATUS.SUCCESS, 2500);
            }).fail(function (xhr, status, message) {
                // handle a failure response
                alert("boo");
            });
        });
    });
        function setZoomXY(CX, CY, TX, TY) {

            //fullsize image crops
            var leftcrop = parseInt(document.getElementById("leftVal").value);
            var topcrop = parseInt(document.getElementById("topVal").value);
            var rightcrop = parseInt(document.getElementById("rightVal").value);
            var bottomcrop = parseInt(document.getElementById("bottomVal").value);

            var rot = parseInt(document.getElementById("rotVal").value);

            //image width on screen
            var screenwidth = $("#theimage").width();
            var screenheight = $("#theimage").height();

            //fullsize image cropped
            var croppedwidth = rightcrop - leftcrop;
            var croppedheight = bottomcrop - topcrop;

            //fullsize image uncropped
            var fullwidth = parseInt("@Model.Width");
            var fullheight = parseInt("@Model.Height");

            //fullsize image crop/margins
            var leftmargin = leftcrop;
            var topmargin = topcrop;

            //half the size of the width/height of the zoomed image
            var halfsize = 200;

            //find crops in fullsize image based on screen x,y
            var tmpleftcrop = leftmargin + Math.floor((CX / screenwidth) * croppedwidth) - halfsize;
            var tmptopcrop = topmargin + Math.floor((CY / screenheight) * croppedheight) - halfsize;
            var tmprightcrop = leftmargin + Math.floor((CX / screenwidth) * croppedwidth) + halfsize;
            var tmpbottomcrop = topmargin + Math.floor((CY / screenheight) * croppedheight) + halfsize;

            if (rot == 90) {
                //rotate right
                tmpleftcrop = leftmargin + Math.floor((CY / screenheight) * croppedwidth) - halfsize;
                tmptopcrop = topmargin + Math.floor((screenwidth - CX) / screenwidth * croppedheight) - halfsize;
                tmprightcrop = leftmargin + Math.floor((CY / screenheight) * croppedwidth) + halfsize;
                tmpbottomcrop = topmargin + Math.floor((screenwidth - CX)/screenwidth * croppedheight) + halfsize;
            } else if (rot == 180) {
                tmpleftcrop = leftmargin + Math.floor((screenwidth - CX) / screenwidth * croppedwidth) - halfsize;
                tmptopcrop = topmargin + Math.floor(((screenheight - CY) / screenheight) * croppedheight) - halfsize;
                tmprightcrop = leftmargin + Math.floor((screenwidth - CX) / screenwidth * croppedwidth) + halfsize;
                tmpbottomcrop = topmargin + Math.floor(((screenheight - CY) / screenheight) * croppedheight) + halfsize;
            } else if (rot == 270) {
                tmpleftcrop = leftmargin + Math.floor(((screenheight - CY) / screenheight) * croppedwidth) - halfsize;
                tmptopcrop = topmargin + Math.floor(CX / screenwidth * croppedheight) - halfsize;
                tmprightcrop = leftmargin + Math.floor(((screenheight - CY) / screenheight) * croppedwidth) + halfsize;
                tmpbottomcrop = topmargin + Math.floor(CX / screenwidth * croppedheight) + halfsize;
            }

            //use TX,TY to translate the crop
            tmpleftcrop += TX;
            tmprightcrop += TX;
            tmptopcrop += TY;
            tmpbottomcrop += TY;

            //make sure we don't go over the edge
            if (tmpleftcrop < 0) { tmpleftcrop = 0; }
            if (tmprightcrop > fullwidth) { tmprightcrop = fullwidth; }
            if (tmptopcrop < 0) { tmptopcrop = 0; }
            if (tmpbottomcrop > fullheight) { tmpbottomcrop = fullheight; }

            var imgQuery = "?crop=" + tmpleftcrop + "," + tmptopcrop + "," + tmprightcrop + "," + tmpbottomcrop + "&rot=" + rot;

            //$('#coords').text(imgQuery);

            var img = document.getElementById("thethumb");
            img.src = window.location.origin + "/home/image/@Model.Image" + imgQuery;
        }
    </script>
}